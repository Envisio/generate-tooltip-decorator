{"version":3,"sources":["../src/index.js"],"names":["shared","chartType","Error","generateTooltipDecorator","series","data","options","displayData","toolTipComments","percentage","key","x","point","index","indexOf","undefined","toFixed"],"mappings":";;;;;;kBAAe,gBAAiC;AAAA,MAArBA,MAAqB,QAArBA,MAAqB;AAAA,MAAbC,SAAa,QAAbA,SAAa;;AAC9C;AACA;AACA,MAAID,WAAW,KAAf,EAAsB;AACpB,UAAM,IAAIE,KAAJ,CAAU,+DAAV,CAAN;AACD;AACD,SAAO,SAASC,wBAAT,GAAoC;AAAA,kBAGrC,IAHqC,CAEvCC,MAFuC;AAAA,QAE7BC,IAF6B,WAE7BA,IAF6B;AAAA,kCAEvBC,OAFuB;AAAA,QAEZC,WAFY,mBAEZA,WAFY;AAAA,QAECC,eAFD,mBAECA,eAFD;AAAA,QAEsBC,UAFtB,GAGrC,IAHqC,CAEsBA,UAFtB;AAAA,QAEkCC,GAFlC,GAGrC,IAHqC,CAEkCA,GAFlC;AAAA,QAEuCC,CAFvC,GAGrC,IAHqC,CAEuCA,CAFvC;AAAA,QAE0CC,KAF1C,GAGrC,IAHqC,CAE0CA,KAF1C;;AAIzC,QAAMC,QAAQR,KAAKS,OAAL,CAAaF,KAAb,CAAd;AACA,QAAIX,cAAc,KAAlB,EAAyB;AACvB,UAAIO,gBAAgBK,KAAhB,MAA2BE,SAA/B,EAA0C;AACxC,0BAAgBL,GAAhB,cAA4BH,YAAYM,KAAZ,CAA5B,WAAoDJ,WAAWO,OAAX,CAAmB,CAAnB,CAApD;AACD;AACD,wBAAgBN,GAAhB,cAA4BH,YAAYM,KAAZ,CAA5B,WAAoDJ,WAAWO,OAAX,CAAmB,CAAnB,CAApD,eAAmFR,gBAAgBK,KAAhB,CAAnF;AACD;AACD,QAAIL,gBAAgBK,KAAhB,MAA2BE,SAA/B,EAA0C;AACxC,wBAAgBJ,CAAhB,cAA0BJ,YAAYM,KAAZ,CAA1B;AACD;AACD,sBAAgBF,CAAhB,cAA0BJ,YAAYM,KAAZ,CAA1B,cAAqDL,gBAAgBK,KAAhB,CAArD;AACD,GAfD;AAgBD,C","file":"index.js","sourcesContent":["export default function ({ shared, chartType }) {\n  // TODO: Boys, enabled shared tooltip by calling generateTooltipDecorator(true)\n  // and set `shared: true` on `tooltip` at the caller level\n  if (shared !== false) {\n    throw new Error('generateTooltipDecorator does not support shared tooltip yet.');\n  }\n  return function generateTooltipDecorator() {\n    const {\n      series: { data, options: { displayData, toolTipComments } }, percentage, key, x, point,\n    } = this;\n    const index = data.indexOf(point);\n    if (chartType === 'pie') {\n      if (toolTipComments[index] === undefined) {\n        return `<span>${key}<br />${displayData[index]} - ${percentage.toFixed(2)}%</span>`;\n      }\n      return `<span>${key}<br />${displayData[index]} - ${percentage.toFixed(2)}%<br />${toolTipComments[index]}</span>`;\n    }\n    if (toolTipComments[index] === undefined) {\n      return `<span>${x}<br />${displayData[index]}</span>`;\n    }\n    return `<span>${x}<br />${displayData[index]}<br />${toolTipComments[index]}</span>`;\n  };\n}\n"]}