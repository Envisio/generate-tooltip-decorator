{"version":3,"sources":["../src/index.js"],"names":["shared","chartType","Error","generateTooltipDecorator","console","log","series","data","options","displayData","toolTipComments","percentage","key","x","point","index","indexOf","toFixed","replace","comment","includes","regex","match","join","length"],"mappings":";;;;;;kBAAe,gBAAiC;AAAA,MAArBA,MAAqB,QAArBA,MAAqB;AAAA,MAAbC,SAAa,QAAbA,SAAa;;AAC9C,MAAID,WAAW,KAAf,EAAsB;AACpB,UAAM,IAAIE,KAAJ,CAAU,+DAAV,CAAN;AACD;AACD,SAAO,SAASC,wBAAT,GAAoC;AACzCC,YAAQC,GAAR,CAAY,iBAAZ;AADyC,kBAIrC,IAJqC,CAGvCC,MAHuC;AAAA,QAG7BC,IAH6B,WAG7BA,IAH6B;AAAA,kCAGvBC,OAHuB;AAAA,gDAGZC,WAHY;AAAA,QAGZA,WAHY,yCAGE,EAHF;AAAA,gDAGMC,eAHN;AAAA,QAGMA,eAHN,yCAGwB,EAHxB;AAAA,QAGgCC,UAHhC,GAIrC,IAJqC,CAGgCA,UAHhC;AAAA,QAG4CC,GAH5C,GAIrC,IAJqC,CAG4CA,GAH5C;AAAA,QAGiDC,CAHjD,GAIrC,IAJqC,CAGiDA,CAHjD;AAAA,QAGoDC,KAHpD,GAIrC,IAJqC,CAGoDA,KAHpD;;AAKzC,QAAMC,QAAQR,KAAKS,OAAL,CAAaF,KAAb,CAAd;AACA,QAAIb,cAAc,KAAlB,EAAyB;AACvB,UAAIS,gBAAgBK,KAAhB,MAA2B,EAA/B,EAAmC;AACjC,0BAAgBH,GAAhB,cAA4BH,YAAYM,KAAZ,CAA5B,WAAoDJ,WAAWM,OAAX,CAAmB,CAAnB,CAApD;AACD;AACD,wBAAgBL,GAAhB,cAA4BH,YAAYM,KAAZ,CAA5B,WAAoDJ,WAAWM,OAAX,CAAmB,CAAnB,CAApD,eAAmFP,gBAAgBK,KAAhB,EAAuBG,OAAvB,CAA+B,KAA/B,EAAsC,QAAtC,CAAnF;AACD;;AAED,QAAIR,gBAAgBK,KAAhB,MAA2B,EAA/B,EAAmC;AACjC,wBAAgBF,CAAhB,cAA0BJ,YAAYM,KAAZ,CAA1B;AACD;;AAED,QAAII,gBAAJ;AACA,QAAIT,gBAAgBK,KAAhB,EAAuBK,QAAvB,CAAgC,IAAhC,CAAJ,EAA2C;AACzCD,gBAAUT,gBAAgBK,KAAhB,EAAuBG,OAAvB,CAA+B,KAA/B,EAAsC,UAAtC,CAAV;AACA,wBAAgBL,CAAhB,cAA0BJ,YAAYM,KAAZ,CAA1B,cAAqDI,OAArD;AACD;AACD,QAAIT,gBAAgBK,KAAhB,EAAuBK,QAAvB,CAAgC,2BAAhC,KAAgEV,gBAAgBK,KAAhB,EAAuBK,QAAvB,CAAgC,QAAhC,CAApE,EAA+G;AAC7GD,gBAAUT,gBAAgBK,KAAhB,EAAuBG,OAAvB,CAA+B,YAA/B,EAA6C,EAA7C,CAAV;AACA,UAAMG,QAAQ,sDAAd;AACAF,gBAAUA,QAAQD,OAAR,CAAgBG,KAAhB,EAAuB,IAAvB,CAAV;AACAF,gBAAUA,QAAQG,KAAR,CAAc,yBAAd,EAAyCC,IAAzC,CAA8C,UAA9C,CAAV;AACA,wBAAgBV,CAAhB,cAA0BJ,YAAYM,KAAZ,CAA1B,cAAqDI,OAArD;AACD;AACD,QAAIT,gBAAgBK,KAAhB,EAAuBO,KAAvB,CAA6B,MAA7B,EAAqCE,MAArC,KAAgD,CAApD,EAAuD;AACrD,wBAAgBX,CAAhB,cAA0BJ,YAAYM,KAAZ,CAA1B,cAAqDL,gBAAgBK,KAAhB,CAArD;AACD;AACDI,cAAUT,gBAAgBK,KAAhB,EAAuBO,KAAvB,CAA6B,yBAA7B,EAAwDC,IAAxD,CAA6D,UAA7D,CAAV;AACA,sBAAgBV,CAAhB,cAA0BJ,YAAYM,KAAZ,CAA1B,cAAqDI,OAArD;AACD,GAlCD;AAmCD,C","file":"index.js","sourcesContent":["export default function ({ shared, chartType }) {\n  if (shared !== false) {\n    throw new Error('generateTooltipDecorator does not support shared tooltip yet.');\n  }\n  return function generateTooltipDecorator() {\n    console.log('hello my friend');\n    const {\n      series: { data, options: { displayData = [], toolTipComments = [] } }, percentage, key, x, point,\n    } = this;\n    const index = data.indexOf(point);\n    if (chartType === 'pie') {\n      if (toolTipComments[index] === '') {\n        return `<span>${key}<br />${displayData[index]} - ${percentage.toFixed(2)}%</span>`;\n      }\n      return `<span>${key}<br />${displayData[index]} - ${percentage.toFixed(2)}%<br />${toolTipComments[index].replace(/\\n/g, '<br />')}</span>`;\n    }\n\n    if (toolTipComments[index] === '') {\n      return `<span>${x}<br />${displayData[index]}</span>`;\n    }\n\n    let comment;\n    if (toolTipComments[index].includes('\\n')) {\n      comment = toolTipComments[index].replace(/\\n/g, ' <br /> ');\n      return `<span>${x}<br />${displayData[index]}<br />${comment}</span>`;\n    }\n    if (toolTipComments[index].includes('rc-widget-tooltip-comment') && toolTipComments[index].includes('<br />')) {\n      comment = toolTipComments[index].replace(/<br ?\\/?>/g, '');\n      const regex = /<span class=\"rc-widget-tooltip-comment\">(.*)<\\/span>/;\n      comment = comment.replace(regex, '$1')\n      comment = comment.match(/([^\\s]*\\s[^\\s]*){0,20}/g).join(' <br /> ');\n      return `<span>${x}<br />${displayData[index]}<br />${comment}</span>`;\n    }\n    if (toolTipComments[index].match(/\\w+/g).length === 1) {\n      return `<span>${x}<br />${displayData[index]}<br />${toolTipComments[index]}</span>`;\n    }\n    comment = toolTipComments[index].match(/([^\\s]*\\s[^\\s]*){0,20}/g).join(' <br /> ');\n    return `<span>${x}<br />${displayData[index]}<br />${comment}</span>`;\n  };\n}\n"]}